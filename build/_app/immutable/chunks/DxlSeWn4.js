import"./DsnmJJEf.js";import"./DooRTIuq.js";import{f as l,t as u,a as n,d as g,n as p}from"./BBlzQAiA.js";import{s as c}from"./DqZASG8G.js";import{s as f,c as b}from"./BWX36f_c.js";import{p as o}from"./XQA5170Q.js";import{a as _}from"./DOeF81No.js";var v=l("<img/>");function y(e,t){let a=o(t,"src",8),s=o(t,"alt",8,""),i=o(t,"className",8,"");var r=v();u(()=>{c(r,"src",`${_}/${a()}`),c(r,"alt",s()),f(r,1,b(i()))}),n(e,r)}const d={title:"DuckDB -  First Steps for Analytics",date:"2025-02-12T00:00:00.000Z",tags:["duckdb","analytics","etl"],summary:"How I set up fast, cheap analytics with DuckDB and Parquet.",cover:"images/blog/duckdb-first-steps/cover.png"},{title:C,date:H,tags:z,summary:E,cover:F}=d;var h=l(`<!> <p>DuckDB makes columnar analytics ridiculously easy. In this post I show how I wired
CSV/Parquet sources, ran simple aggregations, and kept it reproducible.</p> SELECT COUNT(*) FROM 'data/events.parquet';`,1);function w(e){var t=h(),a=g(t);y(a,{src:"images/blog/duckdb-first-steps/cover.png",alt:"DuckDB cover",className:"rounded-xl border border-white/10"}),p(3),n(e,t)}const k=Object.freeze(Object.defineProperty({__proto__:null,default:w,metadata:d},Symbol.toStringTag,{value:"Module"})),m={title:"Hello, World ðŸ‘‹",date:"2025-01-20T00:00:00.000Z",tags:["intro","site"],summary:"A short hello and what I want to write about."},{title:L,date:W,tags:Z,summary:K}=m;var D=l("<p>Welcome! Iâ€™ll be writing about data engineering, ML, and building pragmatic tools.<br/> This site is built with <strong>SvelteKit</strong> and <strong>Tailwind</strong>. Stay tuned.</p>");function S(e){var t=D();n(e,t)}const T=Object.freeze(Object.defineProperty({__proto__:null,default:S,metadata:m},Symbol.toStringTag,{value:"Module"})),O=Object.assign({"/src/lib/blog/posts/duckdb-first-steps.md":k,"/src/lib/blog/posts/hello-world.md":T});function I(e){return(e.split("/").pop()||"").replace(/\.(md|svx)$/,"")}function j(e){return e?.metadata??e?.frontmatter}function B(){const e=Object.entries(O).map(([t,a])=>{const s=j(a);return!s||s.draft?null:{slug:I(t),path:t,meta:s}}).filter(Boolean);return e.sort((t,a)=>{const s=t.meta.date?Date.parse(t.meta.date):0;return(a.meta.date?Date.parse(a.meta.date):0)-s}),e}function R(e){return B().find(t=>t.slug===e)}export{k as _,R as a,T as b,B as g};
